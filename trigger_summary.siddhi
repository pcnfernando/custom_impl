@App:name("summary_alert")
@App:description("Description of the plan")

define trigger FiveMinTriggerStream at every 10 sec;

@store(type = "rdbms", datasource = "BNY_Oracle")
define table NUPT_USR_SUMM_PREF(CUST_ID string, CRT_TS string, UPDT_TS string, NXT_PROC_TS string, ITVL_MMS_NR int, UPDT_USR_ID string, GRP_MAIL_IN string, PROC_STAT_CD string);

@sink(type = 'file', 
	@map(type = 'text'), append = 'true', file.uri = '/stuff/support/BNYM/email.html')
define stream fileStream(content string);

from FiveMinTriggerStream#rdbms:query('BNY_Oracle', str:concat("select TPL_TX as template from TPTT_TPL where TPL_CD='BATCH.GROUP.EMAIL.HTML' ", 
"UNION select TPL_TX from (Select TPL_TX from TPDT_TPL_DTL where TPL_CD='BATCH.GROUP.EMAIL.HTML' order by ORD_NUM ASC)"), 'template string')#window.batch()
 select bny:groupConcatEntry(template) as concatinatedtemplate
 insert into templateStream;

from templateStream
select concatinatedtemplate, str:concat("SELECT DISTINCT CUST_ID, PRE_TIME, CNT_TIME, diff_time AS DIFF_TIME, ALR_TY_CD AS alertCategory , SummaryType AS summaryType, BatchTemplate AS batchTemplate, ActionString AS actionString ",
"FROM ( ",
  "SELECT b.cust_id AS CUST_ID, pre_time AS PRE_TIME, cnt_time AS CNT_TIME, diff_time, b.ALR_TY_CD AS ALR_TY_CD, typ, c.GRP_MAIL_IN AS SummaryType, TPL_TX AS BatchTemplate, ACTN_STNG AS ActionString ",
  "FROM ( ",
         "SELECT time_view.cust_id AS cust_id, pre_time, cnt_time, ALERT_SUMMARY.ALR_TY_CD, (cnt_time - pre_time) AS diff_time, typ, TPL_TX, OUTPUT_TABLE.ACTN_STNG ",
            "FROM ( ",
                    "SELECT a.cust_id, to_timestamp(CONCAT(TO_CHAR(current_timestamp, 'DD-MM-YY'), CONCAT(' ', TO_CHAR(a.pre_time, 'HH24:MI:SS'))),'DD-MM-YY HH24:MI:SS') AS pre_time, ",
                    "to_timestamp(CONCAT(TO_CHAR(current_timestamp, 'DD-MM-YY'), CONCAT(' ', TO_CHAR(NXT_PROC_TS, 'HH24:MI:SS'))),'DD-MM-YY HH24:MI:SS') AS cnt_time, ",
                    "NUPT_USR_SUMM_PREF.GRP_MAIL_IN AS typ ",
                         "FROM ( ",
                               "SELECT NUPT_USR_SUMM_PREF.CUST_ID, MAX(SUMM_TM) AS pre_time ",
                                 "FROM NUPT_USR_SUMM_TIME, NUPT_USR_SUMM_PREF ",
                                 "WHERE NUPT_USR_SUMM_PREF.CUST_ID = NUPT_USR_SUMM_TIME.CUST_ID ",
                                 "AND TO_CHAR(SUMM_TM, 'HH24:MI:SS') < TO_CHAR(NXT_PROC_TS, 'HH24:MI:SS') AND ",
                                 "NXT_PROC_TS < current_timestamp AND TO_CHAR(NXT_PROC_TS, 'HH24:MI:SS') < TO_CHAR(current_timestamp, 'DD-MM-YY') ",
                               "GROUP BY NUPT_USR_SUMM_PREF.CUST_ID) a, NUPT_USR_SUMM_PREF ",
            "WHERE NUPT_USR_SUMM_PREF.CUST_ID = a.CUST_ID ",
            "UNION ",
            "SELECT NUPT_USR_SUMM_PREF.CUST_ID AS cust_id, to_timestamp(CURRENT_DATE, 'DD-MM-YY') AS pre_time, ",
                    "to_timestamp(CONCAT(TO_CHAR(current_timestamp, 'DD-MM-YY'), CONCAT(' ', TO_CHAR(NXT_PROC_TS, 'HH24:MI:SS'))),",
                    "'DD-MM-YY HH24:MI:SS') AS cnt_time, NUPT_USR_SUMM_PREF.GRP_MAIL_IN AS typ ",
            "FROM ( ",
                    "SELECT MIN(SUMM_TM) AS SUMM_TM, CUST_ID ",
                    "FROM NUPT_USR_SUMM_TIME ",
                    "GROUP BY CUST_ID) times, NUPT_USR_SUMM_PREF ",
            "WHERE NUPT_USR_SUMM_PREF.CUST_ID = times.CUST_ID AND TO_CHAR(NUPT_USR_SUMM_PREF.NXT_PROC_TS, 'HH24:MI:SS') = TO_CHAR(times.SUMM_TM, 'HH24:MI:SS') ",
                   "AND NXT_PROC_TS < current_timestamp AND TO_CHAR(NXT_PROC_TS, 'HH24:MI:SS') < TO_CHAR(current_timestamp, 'DD-MM-YY')) ", 
            "time_view, NUSA_USR_SUMM_ALR, ALERT_SUMMARY, OUTPUT_TABLE, TPTT_TPL ",
     "WHERE time_view.cust_id = NUSA_USR_SUMM_ALR.CUST_ID AND time_view.cust_id = ALERT_SUMMARY.CUST_ID ",
           "AND ALERT_SUMMARY.MSG_ID = OUTPUT_TABLE.MSG_ID AND ALERT_SUMMARY.TPC = OUTPUT_TABLE.TPC ",
           "AND ALERT_SUMMARY.CREATED_TIME BETWEEN pre_time AND cnt_time ",
           "AND TPTT_TPL.TPL_CD = CONCAT(CONCAT('BATCH.', ALERT_SUMMARY.ALR_TY_CD), '.EMAIL.HTML')) ",
     "a RIGHT OUTER JOIN NUSA_USR_SUMM_ALR b ",
     "ON b.cust_id = a.cust_id AND b.ALR_TY_CD = a.ALR_TY_CD ",
     "RIGHT OUTER JOIN NUPT_USR_SUMM_PREF c ",
     "ON b.CUST_ID = c.CUST_ID) ",
     "WHERE cust_id IS NOT NULL and ActionString IS NOT NULL") as query
insert into TempStream1; 


--from TempStream1#log("###################################")
--select query
--insert into temp1; SELECT DISTINCT CUST_ID, PRE_TIME, CNT_TIME, ALR_TY_CD, SummaryType, BatchTemplate, ActionString
 
from TempStream1#rdbms:query('BNY_Oracle', query, 'CUST_ID string, PRE_TIME string, CNT_TIME string,  DIFF_TIME string, alertCategory string,summaryType string, batchTemplate string,actionString string')
#window.batch()
select CUST_ID, PRE_TIME, CNT_TIME, DIFF_TIME, alertCategory, summaryType, concatinatedtemplate, batchTemplate, actionString, bny:populateSummary(alertCategory, summaryType, concatinatedtemplate,  batchTemplate, actionString) as summary,  str: substr(concatinatedtemplate, "(BatchEmail_GroupSubj\?=\?)((.|\n)+?)\*=\*",2) as subjectString
group by CUST_ID, summaryType
--, summaryType
insert into TempStream2;

from TempStream2
select summary, str: replaceFirst(str: replaceFirst(str: replaceFirst(subjectString, "\$\*BatchIntervalText\^", DIFF_TIME), "\$\*StartQueryTime\^", PRE_TIME), 
"\$\*EndQueryTime\^", CNT_TIME) as subject
insert into TempStream3;

from TempStream3#log("####################################################################################################################################################")
select summary
insert into TempStream4;

 